{"version":3,"sources":["components/ThoughtList/index.js","utils/mutations.js","utils/queries.js","utils/auth.js","components/ThoughtForm/index.js","components/Recipe/Recipe.js","components/Search/Search.js","pages/Home.js","pages/Signup.js","pages/Login.js","components/CommentList/index.js","components/CommentForm/index.js","pages/SingleThought.js","pages/Profile.js","components/Header/index.js","components/Footer/index.js","pages/SearchPage.js","App.js","reportWebVitals.js","index.js"],"names":["ThoughtList","thoughts","title","showTitle","showUsername","length","map","thought","className","to","thoughtAuthor","style","fontSize","createdAt","thoughtText","_id","LOGIN_USER","gql","ADD_USER","ADD_THOUGHT","ADD_COMMENT","QUERY_USER","QUERY_THOUGHTS","QUERY_SINGLE_THOUGHT","QUERY_ME","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","ThoughtForm","useState","setThoughtText","characterCount","setCharacterCount","useMutation","update","cache","addThought","data","readQuery","query","writeQuery","e","console","error","me","handleFormSubmit","event","preventDefault","variables","Auth","getProfile","username","log","loggedIn","onSubmit","name","placeholder","value","lineHeight","resize","onChange","target","type","message","Recipe","image","ingredients","ingredient","text","src","alt","Search","recipes","setRecipes","search","setSearch","setQuery","useEffect","axios","get","then","response","recipe","label","Home","useQuery","loading","border","Signup","email","password","formState","setFormState","addUser","handleChange","login","cursor","Login","props","CommentList","comments","borderBottom","comment","commentAuthor","commentText","CommentForm","thoughtId","setCommentText","addComment","SingleThought","useParams","fontStyle","Profile","userParam","user","Header","onClick","logout","Footer","useLocation","navigate","useNavigate","pathname","role","errorLink","onError","graphQLErrors","networkError","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","ApolloLink","from","concat","InMemoryCache","App","ApolloProvider","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38b034f5.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ThoughtList = ({\n  thoughts,\n  title,\n  showTitle = true,\n  showUsername = true,\n}) => {\n  if (!thoughts.length) {\n    return <h3>No Thoughts Yet</h3>;\n  }\n\n  return (\n    <div>\n      {showTitle && <h3>{title}</h3>}\n      {thoughts &&\n        thoughts.map((thought) => (\n          <div key={thought._id} className=\"card mb-3\">\n            <h4 className=\"card-header bg-primary text-light p-2 m-0\">\n              {showUsername ? (\n                <Link\n                  className=\"text-light\"\n                  to={`/profiles/${thought.thoughtAuthor}`}\n                >\n                  {thought.thoughtAuthor} <br />\n                  <span style={{ fontSize: '1rem' }}>\n                    had this thought on {thought.createdAt}\n                  </span>\n                </Link>\n              ) : (\n                <>\n                  <span style={{ fontSize: '1rem' }}>\n                    You had this thought on {thought.createdAt}\n                  </span>\n                </>\n              )}\n            </h4>\n            <div className=\"card-body bg-light p-2\">\n              <p>{thought.thoughtText}</p>\n            </div>\n            <Link\n              className=\"btn btn-primary btn-block btn-squared\"\n              to={`/thoughts/${thought._id}`}\n            >\n              Join the discussion on this thought.\n            </Link>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default ThoughtList;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_THOUGHT = gql`\n  mutation addThought($thoughtText: String!) {\n    addThought(thoughtText: $thoughtText) {\n      _id\n      thoughtText\n      thoughtAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n      }\n    }\n  }\n`;\n\nexport const ADD_COMMENT = gql`\n  mutation addComment($thoughtId: ID!, $commentText: String!) {\n    addComment(thoughtId: $thoughtId, commentText: $commentText) {\n      _id\n      thoughtText\n      thoughtAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n        createdAt\n      }\n    }\n  }\n`;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n      thoughts {\n        _id\n        thoughtText\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const QUERY_THOUGHTS = gql`\n  query getThoughts {\n    thoughts {\n      _id\n      thoughtText\n      thoughtAuthor\n      createdAt\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_THOUGHT = gql`\n  query getSingleThought($thoughtId: ID!) {\n    thought(thoughtId: $thoughtId) {\n      _id\n      thoughtText\n      thoughtAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n        commentAuthor\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      username\n      email\n      thoughts {\n        _id\n        thoughtText\n        thoughtAuthor\n        createdAt\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      console.log(data);\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>placeholder something cool?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${characterCount === 280 || error ? 'text-danger' : ''\n              }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Thought\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n","import React from \"react\";\nimport \"./Recipe.css\";\n\nconst Recipe = ({ title, image, ingredients }) => {\n  return (\n    <div className=\"recipe\">\n      <h1>{title}</h1>\n      <ol>\n        {ingredients.map((ingredient) => (\n          <li>{ingredient.text}</li>\n        ))}\n      </ol>\n      <img className=\"style.image\" src={image} alt=\"\" />\n    </div>\n  );\n};\n\nexport default Recipe;\n","import React, { useEffect, useState } from 'react';\nimport Recipe from '../Recipe/Recipe';\nimport axios from 'axios';\nimport './Search.css';\n\nconst Search = () => {\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('');\n \n  useEffect(() => {\n      axios.get(`http://localhost:3000/recipes/${query}`).then((response) => {\n        setRecipes(response.data);\n      });\n  }, [query]);\n\n  if (!recipes) return null;\n\n  const updateSearch = (e) => {\n    e.preventDefault();\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  };\n\n  return (\n    <div className='Search'>\n      <form onSubmit={getSearch} className='search-form'>\n        <input className='search-bar' type='text' value={search} onChange={updateSearch} />\n        <button className='search-button' type='submit'>\n          Search\n        </button>\n      </form>\n      <div className='recipes'>\n        {recipes.map((recipe) => (\n          <Recipe key={recipe.recipe.label} title={recipe.recipe.label} image={recipe.recipe.image} ingredients={recipe.recipe.ingredients} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport ThoughtList from '../components/ThoughtList';\nimport ThoughtForm from '../components/ThoughtForm';\n\nimport Search from '../components/Search/Search';\n\nimport { QUERY_THOUGHTS } from '../utils/queries';\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_THOUGHTS);\n  const thoughts = data?.thoughts || [];\n\n  return (\n    <main>\n      <div className='flex-row justify-center'>\n        <div className='col-12 col-md-10 mb-3 p-3' style={{ border: '1px dotted #1a1a1a' }}>\n          <Search />\n        </div>\n        <div className='col-12 col-md-10 mb-3 p-3' style={{ border: '1px dotted #1a1a1a' }}>\n          <ThoughtForm />\n        </div>\n        <div className='col-12 col-md-8 mb-3'>{loading ? <div>Loading...</div> : <ThoughtList thoughts={thoughts} title='Some Feed for Thought(s)...' />}</div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className='flex-row justify-center mb-4'>\n      <div className='col-12 col-lg-10'>\n        <div className='card'>\n          <h4 className='card-header bg-dark text-light p-2'>Sign Up</h4>\n          <div className='card-body'>\n            {data ? (\n              <p>\n                Success! You may now head <Link to='/'>back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input className='form-input' placeholder='Your username' name='username' type='text' value={formState.name} onChange={handleChange} />\n                <input className='form-input' placeholder='Your email' name='email' type='email' value={formState.email} onChange={handleChange} />\n                <input className='form-input' placeholder='******' name='password' type='password' value={formState.password} onChange={handleChange} />\n                <button className='btn btn-block btn-primary' style={{ cursor: 'pointer' }} type='submit'>\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && <div className='my-3 p-3 bg-danger text-white'>{error.message}</div>}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className='flex-row justify-center mb-4'>\n      <div className='col-12 col-lg-10'>\n        <div className='card'>\n          <h4 className='card-header bg-dark text-light p-2'>Login</h4>\n          <div className='card-body'>\n            {data ? (\n              <p>\n                Success! You may now head <Link to='/'>back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input className='form-input' placeholder='Your email' name='email' type='email' value={formState.email} onChange={handleChange} />\n                <input className='form-input' placeholder='******' name='password' type='password' value={formState.password} onChange={handleChange} />\n                <button className='btn btn-block btn-primary' style={{ cursor: 'pointer' }} type='submit'>\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && <div className='my-3 p-3 bg-danger text-white'>{error.message}</div>}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\nconst CommentList = ({ comments = [] }) => {\n  if (!comments.length) {\n    return <h3>No Comments Yet</h3>;\n  }\n\n  return (\n    <>\n      <h3\n        className=\"p-5 display-inline-block\"\n        style={{ borderBottom: '1px dotted #1a1a1a' }}\n      >\n        Comments\n      </h3>\n      <div className=\"flex-row my-4\">\n        {comments &&\n          comments.map((comment) => (\n            <div key={comment._id} className=\"col-12 mb-3 pb-3\">\n              <div className=\"p-3 bg-dark text-light\">\n                <h5 className=\"card-header\">\n                  {comment.commentAuthor} commented{' '}\n                  <span style={{ fontSize: '0.825rem' }}>\n                    on {comment.createdAt}\n                  </span>\n                </h5>\n                <p className=\"card-body\">{comment.commentText}</p>\n              </div>\n            </div>\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default CommentList;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      console.log(data);\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this thought?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${characterCount === 280 || error ? 'text-danger' : ''\n              }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","import React from 'react';\n\n// Import the `useParams()` hook\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport CommentList from '../components/CommentList';\nimport CommentForm from '../components/CommentForm';\n\nimport { QUERY_SINGLE_THOUGHT } from '../utils/queries';\n\nconst SingleThought = () => {\n  // Use `useParams()` to retrieve value of the route parameter `:profileId`\n  const { thoughtId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_SINGLE_THOUGHT, {\n    // pass URL parameter\n    variables: { thoughtId: thoughtId },\n  });\n\n  const thought = data?.thought || {};\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div className='my-3'>\n      <h3 className='card-header bg-dark text-light p-2 m-0'>\n        {thought.thoughtAuthor} <br />\n        <span style={{ fontSize: '1rem' }}>had this thought on {thought.createdAt}</span>\n      </h3>\n      <div className='bg-light py-4'>\n        <blockquote\n          className='p-4'\n          style={{\n            fontSize: '1.5rem',\n            fontStyle: 'italic',\n            border: '2px dotted #1a1a1a',\n            lineHeight: '1.5',\n          }}\n        >\n          {thought.thoughtText}\n        </blockquote>\n      </div>\n\n      <div className='my-5'>\n        <CommentList comments={thought.comments} />\n      </div>\n      <div className='m-3 p-4' style={{ border: '1px dotted #1a1a1a' }}>\n        <CommentForm thoughtId={thought._id} />\n      </div>\n    </div>\n  );\n};\n\nexport default SingleThought;\n","import React from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport ThoughtForm from '../components/ThoughtForm';\nimport ThoughtList from '../components/ThoughtList';\n\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\n\nimport Auth from '../utils/auth';\n\nconst Profile = () => {\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n\n  const user = data?.me || data?.user || {};\n  // navigate to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Navigate to='/me' />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.username) {\n    return <h4>You need to be logged in to see this. Use the navigation links above to sign up or log in!</h4>;\n  }\n\n  return (\n    <div>\n      <div className='flex-row justify-center mb-3'>\n        <h2 className='col-12 col-md-10 bg-dark text-light p-3 mb-5'>Viewing {userParam ? `${user.username}'s` : 'your'} profile.</h2>\n\n        <div className='col-12 col-md-10 mb-5'>\n          <ThoughtList thoughts={user.thoughts} title={`${user.username}'s thoughts...`} showTitle={false} showUsername={false} />\n        </div>\n        {!userParam && (\n          <div className='col-12 col-md-10 mb-3 p-3' style={{ border: '1px dotted #1a1a1a' }}>\n            <ThoughtForm />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Auth from '../../utils/auth';\n\nimport Search from '../Search/Search';\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <header className=\"bg-primary text-light mb-4 py-3 flex-row align-center\">\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n        <div>\n          <Link className=\"text-light\" to=\"/\">\n            <h1 className=\"m-0\">Flavored Text</h1>\n          </Link>\n          <p className=\"m-0\">placeholder something cool.</p>\n        </div>\n\n        {/* <div className='col-12 col-md-10 mb-3 p-3' style={{ border: '1px dotted #1a1a1a' }}>\n          <Search />\n        </div> */}\n\n        {/* Search button */}\n        <Link className=\"btn btn-info m-2\" to=\"/search\">\n          <button className='search-button' type='submit'>\n            Search\n          </button>\n        </Link>\n        <div>\n          {Auth.loggedIn() ? (\n            <>\n              {/* <Link className=\"btn btn-info m-2\" to=\"/search\">\n                <button className='search-button' type='submit'>\n                  Search\n                </button>\n              </Link> */}\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/me\">\n                {Auth.getProfile().data.username}'s profile\n              </Link>\n              <button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"btn btn-lg btn-light m-2\" to=\"/signup\">\n                Signup\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  return (\n    <footer className='w-100 mt-auto bg-secondary p-4'>\n      <div className='container text-center mb-5'>\n        {location.pathname !== '/' && (\n          <button className='btn btn-dark mb-3' onClick={() => navigate(-1)}>\n            &larr; Go Back\n          </button>\n        )}\n        <h4>\n          Made with{' '}\n          <span className='emoji' role='img' aria-label='heart' aria-hidden='false'>\n            ❤️\n          </span>{' '}\n          by \"The Cool Beanz\".\n        </h4>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from 'react';\nimport Recipe from '../components/Recipe/Recipe';\nimport axios from 'axios';\nimport '../components/Search/Search.css';\n\nconst Search = () => {\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    axios.get(`http://localhost:3000/recipes/${query}`).then((response) => {\n      setRecipes(response.data);\n    });\n  }, [query]);\n\n    if (!recipes) return null;\n\n  const updateSearch = (e) => {\n    e.preventDefault();\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  };\n\n  return (\n    <div className='Search'>\n      <form onSubmit={getSearch} className='search-form'>\n        <input className='search-bar' type='text' value={search} onChange={updateSearch} />\n        <button className='search-button' type='submit'>\n          Search\n        </button>\n      </form>\n      <div className='recipes'>\n        {recipes.map((recipe) => (\n          <Recipe key={recipe.recipe.label} title={recipe.recipe.label} image={recipe.recipe.image} ingredients={recipe.recipe.ingredients} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport SingleThought from './pages/SingleThought';\nimport Profile from './pages/Profile';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nimport Search from './pages/SearchPage';\n\nimport { onError } from 'apollo-link-error';\nimport { ApolloLink } from 'apollo-link';\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    console.error(' --- graphQLErrors --- \\n', graphQLErrors);\n  }\n  if (networkError) {\n    console.error(' --- networkError --- \\n', networkError);\n  }\n});\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: ApolloLink.from([errorLink, authLink.concat(httpLink)]),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className='flex-column justify-flex-start min-100-vh'>\n          <Header />\n          <div className='container'>\n            <Routes>\n              <Route path='/' element={<Home />} />\n              <Route path='/search' element={<Search />} />\n              <Route path='/login' element={<Login />} />\n              <Route path='/signup' element={<Signup />} />\n              <Route path='/me' element={<Profile />} />\n              <Route path='/profiles/:username' element={<Profile />} />\n              <Route path='/thoughts/:thoughtId' element={<SingleThought />} />\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}